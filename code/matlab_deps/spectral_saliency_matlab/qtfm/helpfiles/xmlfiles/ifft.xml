<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE function SYSTEM "qtfmfunction.dtd">
<function name = "ifft" overload = "true">
<short>Inverse Fast Fourier transform</short>
<syntax>Y = ifft(X)</syntax>
<long>
<para>
<code>ifft(X)</code> computes the inverse Fast Fourier Transform of the quaternion
vector <code>X</code> using a default axis and left-handed transform. See
the related function <code>iqfft</code> which permits control over the axis
and handedness.
</para>
<para>
The axis chosen is a complex (biquaternion) axis if <code>X</code> is
complex, otherwise the axis is a (real) quaternion.
</para>
<para>
The <code>N</code> and <code>dim</code> parameters of the overloaded
&matlab; function are not yet implemented, but may be implemented at a
later date.
</para>
</long>
<seealso>
<matlabfun name = "ifft"/>
<qtfmfun name = "ifft2"/>
<qtfmfun name = "fft"/>
<qtfmfun name = "iqfft"/>
</seealso>
<references>
<reference>Ell, T. A. and Sangwine, S. J.,
'Hypercomplex Fourier Transforms of Color Images',
<italic>IEEE Transactions on Image Processing</italic>, <bold>16</bold>,
(1), January 2007, 22-35. <doi>10.1109/TIP.2006.884955</doi>.
</reference>
<reference>Salem Said, Nicolas Le Bihan, and Stephen J. Sangwine,
'Fast complexified quaternion Fourier transform',
<italic>IEEE Transactions on Signal Processing</italic>, <bold>56</bold>,
(4), April 2008, 1522-1531.
<doi>10.1109/TSP.2007.910477</doi>.
</reference>
</references>
</function>

<!--$Id: ifft.xml,v 1.3 2010/03/03 15:37:21 sangwine Exp $-->
